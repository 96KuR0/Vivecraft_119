--- a/net/optifine/ConnectedTextures.java
+++ b/net/optifine/ConnectedTextures.java
@@ -86,7 +86,7 @@
 
     public static BakedQuad[] getConnectedTexture(BlockAndTintGetter blockAccess, BlockState blockState, BlockPos blockPos, BakedQuad quad, RenderEnv renderEnv)
     {
-        TextureAtlasSprite textureatlassprite = quad.getSprite();
+        TextureAtlasSprite textureatlassprite = quad.a();
 
         if (textureatlassprite == null)
         {
@@ -287,7 +287,7 @@
     private static BakedQuad makeSpriteQuad(BakedQuad quad, TextureAtlasSprite sprite)
     {
         int[] aint = (int[])quad.getVertices().clone();
-        TextureAtlasSprite textureatlassprite = quad.getSprite();
+        TextureAtlasSprite textureatlassprite = quad.a();
 
         for (int i = 0; i < 4; ++i)
         {
@@ -357,7 +357,7 @@
     public static BakedQuad[] getConnectedTextureSingle(BlockAndTintGetter blockAccess, BlockState blockState, BlockPos blockPos, Direction facing, BakedQuad quad, boolean checkBlocks, int pass, RenderEnv renderEnv)
     {
         Block block = blockState.getBlock();
-        TextureAtlasSprite textureatlassprite = quad.getSprite();
+        TextureAtlasSprite textureatlassprite = quad.a();
 
         if (tileProperties != null)
         {
@@ -543,7 +543,7 @@
                     }
                 }
 
-                TextureAtlasSprite textureatlassprite = quad.getSprite();
+                TextureAtlasSprite textureatlassprite = quad.a();
 
                 switch (cp.method)
                 {
@@ -806,7 +806,7 @@
 
     private static synchronized BakedQuad[] getConnectedTextureCtmCompact(ConnectedProperties cp, BlockGetter blockAccess, BlockState blockState, BlockPos blockPos, int vertAxis, int side, BakedQuad quad, int metadata, RenderEnv renderEnv)
     {
-        TextureAtlasSprite textureatlassprite = quad.getSprite();
+        TextureAtlasSprite textureatlassprite = quad.a();
         int i = getConnectedTextureCtmIndex(cp, blockAccess, blockState, blockPos, vertAxis, side, textureatlassprite, metadata, renderEnv);
         return ConnectedTexturesCompact.getConnectedTextureCtmCompact(i, cp, side, quad, renderEnv);
     }
@@ -819,7 +819,7 @@
         }
         else
         {
-            TextureAtlasSprite textureatlassprite = quad.getSprite();
+            TextureAtlasSprite textureatlassprite = quad.a();
             BlockDir[] ablockdir = getSideDirections(side, vertAxis);
             boolean[] aboolean = renderEnv.getBorderFlags();
 
@@ -829,18 +829,19 @@
             }
 
             ListQuadsOverlay listquadsoverlay = renderEnv.getListQuadsOverlay(cp.layer);
-            Object dirEdges;
+            Object ablockdir1;
 
             try
             {
-                if (!aboolean[0] || !aboolean[1] || !aboolean[2] || !aboolean[3])
+                if (aboolean[0] && aboolean[1] && aboolean[2] && aboolean[3])
                 {
-                    if (aboolean[0] && aboolean[1] && aboolean[2])
-                    {
-                        listquadsoverlay.addQuad(getQuadFull(cp.tileIcons[5], quad, cp.tintIndex), cp.tintBlockState);
-                        return null;
-                    }
+                    listquadsoverlay.addQuad(getQuadFull(cp.tileIcons[8], quad, cp.tintIndex), cp.tintBlockState);
+                    Object object = null;
+                    return (BakedQuad[])object;
+                }
 
+                if (!aboolean[0] || !aboolean[1] || !aboolean[2])
+                {
                     if (aboolean[0] && aboolean[2] && aboolean[3])
                     {
                         listquadsoverlay.addQuad(getQuadFull(cp.tileIcons[6], quad, cp.tintIndex), cp.tintBlockState);
@@ -965,8 +966,8 @@
                     return null;
                 }
 
-                listquadsoverlay.addQuad(getQuadFull(cp.tileIcons[8], quad, cp.tintIndex), cp.tintBlockState);
-                dirEdges = null;
+                listquadsoverlay.addQuad(getQuadFull(cp.tileIcons[5], quad, cp.tintIndex), cp.tintBlockState);
+                ablockdir1 = null;
             }
             finally
             {
@@ -976,7 +977,7 @@
                 }
             }
 
-            return (BakedQuad[])dirEdges;
+            return (BakedQuad[])ablockdir1;
         }
     }
 
@@ -1095,7 +1096,7 @@
 
             try
             {
-                TextureAtlasSprite textureatlassprite = getConnectedTextureCtm(cp, blockAccess, blockState, blockPos, vertAxis, side, quad.getSprite(), metadata, renderEnv);
+                TextureAtlasSprite textureatlassprite = getConnectedTextureCtm(cp, blockAccess, blockState, blockPos, vertAxis, side, quad.a(), metadata, renderEnv);
 
                 if (textureatlassprite != null)
                 {
@@ -1645,15 +1646,7 @@
         else
         {
             Block block = state.getBlock();
-
-            if (block instanceof GlassBlock)
-            {
-                return true;
-            }
-            else
-            {
-                return block instanceof StainedGlassBlock;
-            }
+            return block instanceof GlassBlock ? true : block instanceof StainedGlassBlock;
         }
     }
 
@@ -1777,7 +1770,7 @@
                 if (list.size() > 0)
                 {
                     BakedQuad bakedquad1 = (BakedQuad)list.get(0);
-                    return bakedquad1.getSprite();
+                    return bakedquad1.a();
                 }
                 else
                 {
@@ -1795,7 +1788,7 @@
 
                             if (bakedquad.getDirection() == direction)
                             {
-                                return bakedquad.getSprite();
+                                return bakedquad.a();
                             }
                         }
 
@@ -2165,7 +2158,7 @@
     public static void updateIcons(TextureAtlas textureMap, PackResources rp)
     {
         String[] astring = ResUtils.collectFiles(rp, "optifine/ctm/", ".properties", getDefaultCtmPaths());
-        Arrays.sort((Object[])astring);
+        Arrays.sort(astring);
         List list = makePropertyList(tileProperties);
         List list1 = makePropertyList(blockProperties);
 
@@ -2200,11 +2193,11 @@
             }
             catch (FileNotFoundException filenotfoundexception)
             {
-                Config.warn("ConnectedTextures file not found: " + s);
+                Config.warn("ConnectedTextures file not found: " + s + " " + filenotfoundexception.getMessage());
             }
-            catch (Exception exception)
+            catch (Exception exception1)
             {
-                exception.printStackTrace();
+                exception1.printStackTrace();
             }
         }
 
@@ -2337,7 +2330,7 @@
 
             if (list != null)
             {
-                ConnectedProperties[] aconnectedproperties1 = (ConnectedProperties[]) list.toArray(new ConnectedProperties[list.size()]);
+                ConnectedProperties[] aconnectedproperties1 = list.toArray(new ConnectedProperties[list.size()]);
                 aconnectedproperties[i] = aconnectedproperties1;
             }
         }
@@ -2446,12 +2439,9 @@
                 String s1 = s + "programmer_art/";
                 list.add(s1 + pathSuffix);
             }
-            else
+            else if (packresources == Config.getDefaultResourcePack())
             {
-                if (packresources == Config.getDefaultResourcePack())
-                {
-                    list.add(s + pathSuffix);
-                }
+                list.add(s + pathSuffix);
             }
         }
     }
