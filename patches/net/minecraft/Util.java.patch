--- a/net/minecraft/Util.java
+++ b/net/minecraft/Util.java
@@ -115,7 +115,7 @@
 
     private static ExecutorService makeExecutor(String p_137478_)
     {
-        int i = Mth.clamp(Runtime.getRuntime().availableProcessors() - 1, 1, 7);
+        int i = Mth.clamp(Runtime.getRuntime().availableProcessors() - 2, 1, 7);
         ExecutorService executorservice;
 
         if (i <= 0)
@@ -470,9 +470,9 @@
         return exceptionOpenUrl;
     }
 
-    public static void setExceptionOpenUrl(Exception exceptionOpenUrl)
+    public static void setExceptionOpenUrl(Exception p_setExceptionOpenUrl_0_)
     {
-        Util.exceptionOpenUrl = exceptionOpenUrl;
+        exceptionOpenUrl = p_setExceptionOpenUrl_0_;
     }
 
     public static ExecutorService getCapeExecutor()
@@ -882,10 +882,10 @@
                 process.getErrorStream().close();
                 process.getOutputStream().close();
             }
-            catch (PrivilegedActionException | IOException ioexception)
+            catch (IOException | PrivilegedActionException privilegedactionexception)
             {
-                Util.LOGGER.error("Couldn't open url '{}'", p_137651_, ioexception);
-                Util.exceptionOpenUrl = ioexception;
+                Util.LOGGER.error("Couldn't open url '{}'", p_137651_, privilegedactionexception);
+                Util.exceptionOpenUrl = privilegedactionexception;
             }
         }
 
@@ -931,9 +931,9 @@
             {
                 this.openUrl((new URI(p_137647_)).toURL());
             }
-            catch (IllegalArgumentException | URISyntaxException | MalformedURLException malformedurlexception)
+            catch (URISyntaxException | MalformedURLException | IllegalArgumentException illegalargumentexception)
             {
-                Util.LOGGER.error("Couldn't open uri '{}'", p_137647_, malformedurlexception);
+                Util.LOGGER.error("Couldn't open uri '{}'", p_137647_, illegalargumentexception);
             }
         }
     }
