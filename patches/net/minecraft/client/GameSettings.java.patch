--- a/net/minecraft/client/GameSettings.java
+++ b/net/minecraft/client/GameSettings.java
@@ -69,6 +69,7 @@
 import org.apache.commons.lang3.ArrayUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.vivecraft.provider.MCOpenVR;
 
 public class GameSettings
 {
@@ -183,6 +184,7 @@
     public float field_243227_aN = 1.0F;
     public double gamma;
     public int guiScale;
+    public int guiScaleUser; // to store the user's setting, do not actually use
     public ParticleStatus particles = ParticleStatus.ALL;
     public NarratorStatus narrator = NarratorStatus.OFF;
     public String language = "en_us";
@@ -194,7 +196,7 @@
     public boolean ofSmoothFps = false;
     public boolean ofSmoothWorld = Config.isSingleProcessor();
     public boolean ofLazyChunkLoading = Config.isSingleProcessor();
-    public boolean ofRenderRegions = false;
+    public boolean ofRenderRegions = true;
     public boolean ofSmartAnimations = false;
     public double ofAoLevel = 1.0D;
     public int ofAaLevel = 0;
@@ -233,7 +235,7 @@
     public int ofTranslucentBlocks = 0;
     public boolean ofDynamicFov = true;
     public boolean ofAlternateBlocks = true;
-    public int ofDynamicLights = 3;
+    public int ofDynamicLights = 2;
     public boolean ofCustomEntityModels = true;
     public boolean ofCustomGuis = true;
     public boolean ofShowGlErrors = true;
@@ -307,6 +309,9 @@
         this.ofKeyBindZoom = new KeyBinding("of.key.zoom", 67, "key.categories.misc");
         this.keyBindings = ArrayUtils.add(this.keyBindings, this.ofKeyBindZoom);
         KeyUtils.fixKeyConflicts(this.keyBindings, new KeyBinding[] {this.ofKeyBindZoom});
+        //Vivecraft
+        this.keyBindings = MCOpenVR.initializeBindings(this.keyBindings);
+        //
         this.renderDistanceChunks = 8;
         this.loadOptions();
         Config.initGameSettings(this);
@@ -519,7 +524,7 @@
 
                     if ("guiScale".equals(s))
                     {
-                        this.guiScale = Integer.parseInt(s1);
+                        this.guiScaleUser = Integer.parseInt(s1); // VIVECRAFT: ignore gui scale
                     }
 
                     if ("particles".equals(s))
@@ -883,7 +888,7 @@
                 printwriter.println("gamma:" + this.gamma);
                 printwriter.println("renderDistance:" + this.renderDistanceChunks);
                 printwriter.println("entityDistanceScaling:" + this.entityDistanceScaling);
-                printwriter.println("guiScale:" + this.guiScale);
+                printwriter.println("guiScale:" + this.guiScaleUser);
                 printwriter.println("particles:" + this.particles.getId());
                 printwriter.println("maxFps:" + this.framerateLimit);
                 printwriter.println("difficulty:" + this.difficulty.getId());
@@ -1077,7 +1082,7 @@
             {
                 if (i >= aint[j])
                 {
-                    this.ofAaLevel = aint[j];
+                    this.ofAaLevel = 0; //Vivecraft aint[j];
                 }
             }
 
@@ -1518,7 +1523,7 @@
 
         if (p_setOptionValueOF_1_ == AbstractOption.FAST_RENDER)
         {
-            this.ofFastRender = !this.ofFastRender;
+        	this.ofFastRender = false; //Vivecraft !this.ofFastRender;
         }
 
         if (p_setOptionValueOF_1_ == AbstractOption.TRANSLUCENT_BLOCKS)
@@ -2613,6 +2618,13 @@
             KeyUtils.fixKeyConflicts(this.keyBindings, new KeyBinding[] {this.ofKeyBindZoom});
             KeyBinding.resetKeyBindingArrayAndHash();
             bufferedreader.close();
+            
+            //Vivecraft important.
+            this.ofFastRender = false;
+            this.ofAaLevel = 0;
+            this.ofAfLevel = 1;
+            //
+            
         }
         catch (Exception exception11)
         {
@@ -2763,7 +2775,7 @@
         this.cloudOption = CloudOption.FANCY;
         this.fov = 70.0D;
         this.gamma = 0.0D;
-        this.guiScale = 0;
+        this.guiScaleUser = 0; // VIVECRAFT: ignore gui scale
         this.particles = ParticleStatus.ALL;
         this.heldItemTooltips = true;
         this.forceUnicodeFont = false;
@@ -2776,7 +2788,7 @@
         Config.updateAvailableProcessors();
         this.ofSmoothWorld = Config.isSingleProcessor();
         this.ofLazyChunkLoading = false;
-        this.ofRenderRegions = false;
+        this.ofRenderRegions = true;
         this.ofFastMath = false;
         this.ofFastRender = false;
         this.ofTranslucentBlocks = 0;
@@ -3006,3 +3018,4 @@
         this.field_243228_bb = p_243229_1_;
     }
 }
+
