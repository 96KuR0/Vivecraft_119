--- a/net/minecraft/client/settings/AbstractOption.java
+++ b/net/minecraft/client/settings/AbstractOption.java
@@ -140,7 +140,7 @@
             return d0 == p_lambda$static$23_1_.getMaxValue() ? s + I18n.format("options.framerateLimit.max") : s + I18n.format("options.framerate", (int)d0);
         }
     });
-    public static final SliderPercentageOption GAMMA = new SliderPercentageOption("options.gamma", 0.0D, 1.0D, 0.0F, (p_lambda$static$24_0_) ->
+    public static final SliderPercentageOption GAMMA = new SliderPercentageOption("options.gamma", -0.5D, 1.0D, 0.0F, (p_lambda$static$24_0_) ->
     {
         return p_lambda$static$24_0_.gamma;
     }, (p_lambda$static$25_0_, p_lambda$static$25_1_) ->
@@ -151,12 +151,21 @@
         double d0 = p_lambda$static$26_1_.normalizeValue(p_lambda$static$26_1_.get(p_lambda$static$26_0_));
         String s = p_lambda$static$26_1_.getDisplayString();
 
-        if (d0 == 0.0D)
+        if (Math.abs(d0 - 1D / 3D) < 0.005)
         {
             return s + I18n.format("options.gamma.min");
         }
-        else {
-            return d0 == 1.0D ? s + I18n.format("options.gamma.max") : s + "+" + (int)(d0 * 100.0D) + "%";
+        else if (d0 == 1.0D)
+        {
+            return s + I18n.format("options.gamma.max");
+        }
+        else if (d0 == 0.0D)
+        {
+            return s + I18n.format("vivecraft.options.gamma.cantseeshitcaptain");
+        }
+        else
+        {
+            return s + (d0 >= 1D / 3D ? "+" : "") + (int)((d0 * 1.5 - 0.5) * 100.0D) + "%";
         }
     });
     public static final SliderPercentageOption MIPMAP_LEVELS = new SliderPercentageOption("options.mipmapLevels", 0.0D, 4.0D, 1.0F, (p_lambda$static$27_0_) ->
@@ -277,11 +286,11 @@
         return p_lambda$static$51_0_.fancyGraphics ? p_lambda$static$51_1_.getDisplayString() + I18n.format("options.graphics.fancy") : p_lambda$static$51_1_.getDisplayString() + I18n.format("options.graphics.fast");
     });
     public static final IteratableOption GUI_SCALE = new IteratableOption("options.guiScale", (p_lambda$static$52_0_, p_lambda$static$52_1_) ->
-    {
-        p_lambda$static$52_0_.guiScale = MathHelper.normalizeAngle(p_lambda$static$52_0_.guiScale + p_lambda$static$52_1_, Minecraft.getInstance().getMainWindow().calcGuiScale(0, Minecraft.getInstance().getForceUnicodeFont()) + 1);
+    { // VIVECRAFT: ignore gui scale
+        p_lambda$static$52_0_.guiScaleUser = MathHelper.normalizeAngle(p_lambda$static$52_0_.guiScaleUser + p_lambda$static$52_1_, Minecraft.getInstance().getMainWindow().calcGuiScale(0, Minecraft.getInstance().getForceUnicodeFont()) + 1);
     }, (p_lambda$static$53_0_, p_lambda$static$53_1_) ->
     {
-        return p_lambda$static$53_1_.getDisplayString() + (p_lambda$static$53_0_.guiScale == 0 ? I18n.format("options.guiScale.auto") : p_lambda$static$53_0_.guiScale);
+        return p_lambda$static$53_1_.getDisplayString() + (p_lambda$static$53_0_.guiScaleUser == 0 ? I18n.format("options.guiScale.auto") : p_lambda$static$53_0_.guiScaleUser);
     });
     public static final IteratableOption MAIN_HAND = new IteratableOption("options.mainHand", (p_lambda$static$54_0_, p_lambda$static$54_1_) ->
     {
