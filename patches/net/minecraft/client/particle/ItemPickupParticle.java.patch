--- a/net/minecraft/client/particle/ItemPickupParticle.java
+++ b/net/minecraft/client/particle/ItemPickupParticle.java
@@ -2,6 +2,8 @@
 
 import com.mojang.blaze3d.matrix.MatrixStack;
 import com.mojang.blaze3d.vertex.IVertexBuilder;
+
+import net.minecraft.client.Minecraft;
 import net.minecraft.client.renderer.ActiveRenderInfo;
 import net.minecraft.client.renderer.IRenderTypeBuffer;
 import net.minecraft.client.renderer.RenderTypeBuffers;
@@ -59,14 +61,28 @@
 
         float f = ((float)this.age + partialTicks) / 3.0F;
         f = f * f;
-        double d0 = MathHelper.lerp((double)partialTicks, this.target.lastTickPosX, this.target.getPosX());
-        double d1 = MathHelper.lerp((double)partialTicks, this.target.lastTickPosY, this.target.getPosY()) + 0.5D;
-        double d2 = MathHelper.lerp((double)partialTicks, this.target.lastTickPosZ, this.target.getPosZ());
+        
+        Vec3d pos = this.target.getPositionVec().add(0, 0.5f, 0);
+   
+        //Vivecraft
+        Minecraft mc = Minecraft.getInstance();
+        if (target== mc.player) {
+        	pos = mc.gameRenderer.getControllerRenderPos(0);
+        }   
+        //
+      
+        double d0 = MathHelper.lerp((double)partialTicks, this.target.lastTickPosX, pos.getX());
+        double d1 = MathHelper.lerp((double)partialTicks, this.target.lastTickPosY, pos.getY());
+        double d2 = MathHelper.lerp((double)partialTicks, this.target.lastTickPosZ, pos.getZ());
+        
         double d3 = MathHelper.lerp((double)f, this.item.getPosX(), d0);
         double d4 = MathHelper.lerp((double)f, this.item.getPosY(), d1);
         double d5 = MathHelper.lerp((double)f, this.item.getPosZ(), d2);
         IRenderTypeBuffer.Impl irendertypebuffer$impl = this.renderTypeBuffers.getBufferSource();
         Vec3d vec3d = renderInfo.getProjectedView();
+     
+
+        
         this.renderManager.renderEntityStatic(this.item, d3 - vec3d.getX(), d4 - vec3d.getY(), d5 - vec3d.getZ(), this.item.rotationYaw, partialTicks, new MatrixStack(), irendertypebuffer$impl, this.renderManager.getPackedLight(this.item, partialTicks));
         irendertypebuffer$impl.finish();
 
