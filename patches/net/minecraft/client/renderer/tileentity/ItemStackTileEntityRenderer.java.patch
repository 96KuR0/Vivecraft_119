--- a/net/minecraft/client/renderer/tileentity/ItemStackTileEntityRenderer.java
+++ b/net/minecraft/client/renderer/tileentity/ItemStackTileEntityRenderer.java
@@ -14,8 +14,10 @@
 import net.minecraft.block.Block;
 import net.minecraft.block.Blocks;
 import net.minecraft.block.ShulkerBoxBlock;
+import net.minecraft.client.Minecraft;
 import net.minecraft.client.renderer.IRenderTypeBuffer;
 import net.minecraft.client.renderer.ItemRenderer;
+import net.minecraft.client.renderer.RenderType;
 import net.minecraft.client.renderer.entity.model.ShieldModel;
 import net.minecraft.client.renderer.entity.model.TridentModel;
 import net.minecraft.client.renderer.model.Material;
@@ -40,6 +42,7 @@
 import net.minecraft.tileentity.TrappedChestTileEntity;
 import net.minecraft.util.Direction;
 import org.apache.commons.lang3.StringUtils;
+import org.vivecraft.gameplay.trackers.SwingTracker;
 
 public class ItemStackTileEntityRenderer
 {
@@ -143,6 +146,13 @@
         }
         else
         {
+        	//Vivecraft
+            float a = 1;
+            if(Minecraft.getInstance().getItemRenderer().isfphand) {
+         	   a = SwingTracker.getItemFade(Minecraft.getInstance().player, itemStackIn);
+            }
+            //
+            
             if (item == Items.SHIELD)
             {
                 boolean flag = itemStackIn.getChildTag("BlockEntityTag") != null;
@@ -150,7 +160,13 @@
                 matrixStackIn.scale(1.0F, -1.0F, -1.0F);
                 Material material = flag ? ModelBakery.LOCATION_SHIELD_BASE : ModelBakery.LOCATION_SHIELD_NO_PATTERN;
                 IVertexBuilder ivertexbuilder = material.getSprite().wrapBuffer(ItemRenderer.getBuffer(bufferIn, this.modelShield.getRenderType(material.getAtlasLocation()), false, itemStackIn.hasEffect()));
-                this.modelShield.func_228294_b_().render(matrixStackIn, ivertexbuilder, combinedLightIn, combinedOverlayIn, 1.0F, 1.0F, 1.0F, 1.0F);
+                
+                //Vivecraft
+                if(a<1)
+                	ivertexbuilder = material.getSprite().wrapBuffer(ItemRenderer.getBuffer(bufferIn, RenderType.getEntityTranslucent(material.getAtlasLocation()), false, itemStackIn.hasEffect()));
+                //
+                
+                this.modelShield.func_228294_b_().render(matrixStackIn, ivertexbuilder, combinedLightIn, combinedOverlayIn, 1.0F, 1.0F, 1.0F, a);
 
                 if (flag)
                 {
@@ -159,7 +175,7 @@
                 }
                 else
                 {
-                    this.modelShield.func_228293_a_().render(matrixStackIn, ivertexbuilder, combinedLightIn, combinedOverlayIn, 1.0F, 1.0F, 1.0F, 1.0F);
+                    this.modelShield.func_228293_a_().render(matrixStackIn, ivertexbuilder, combinedLightIn, combinedOverlayIn, 1.0F, 1.0F, 1.0F, a);
                 }
 
                 matrixStackIn.pop();
@@ -169,7 +185,13 @@
                 matrixStackIn.push();
                 matrixStackIn.scale(1.0F, -1.0F, -1.0F);
                 IVertexBuilder ivertexbuilder1 = ItemRenderer.getBuffer(bufferIn, this.trident.getRenderType(TridentModel.TEXTURE_LOCATION), false, itemStackIn.hasEffect());
-                this.trident.render(matrixStackIn, ivertexbuilder1, combinedLightIn, combinedOverlayIn, 1.0F, 1.0F, 1.0F, 1.0F);
+              
+                //Vivecraft
+                if(a<1)
+                	ivertexbuilder1 = ItemRenderer.getBuffer(bufferIn, RenderType.getEntityTranslucent(TridentModel.TEXTURE_LOCATION), false, itemStackIn.hasEffect());
+                //
+                
+                this.trident.render(matrixStackIn, ivertexbuilder1, combinedLightIn, combinedOverlayIn, 1.0F, 1.0F, 1.0F, a);
                 matrixStackIn.pop();
             }
         }
