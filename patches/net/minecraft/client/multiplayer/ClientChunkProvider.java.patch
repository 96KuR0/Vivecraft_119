--- a/net/minecraft/client/multiplayer/ClientChunkProvider.java
+++ b/net/minecraft/client/multiplayer/ClientChunkProvider.java
@@ -112,7 +112,7 @@
         else
         {
             int i = this.array.getIndex(chunkX, chunkZ);
-            Chunk chunk = this.array.chunks.get(i);
+            Chunk chunk = (Chunk) this.array.chunks.get(i);
 
             if (!p_228313_7_ && isValid(chunk, chunkX, chunkZ))
             {
@@ -147,12 +147,13 @@
                     return null;
                 }
 
-                chunk = new ChunkOF(this.world, new ChunkPos(chunkX, chunkZ), biomeContainerIn);
+                Object temp = new ChunkOF(this.world, new ChunkPos(chunkX, chunkZ), biomeContainerIn);
+                chunk = (Chunk) temp;
                 chunk.read(biomeContainerIn, packetIn, nbtTagIn, sizeIn);
                 this.array.replace(i, chunk);
             }
 
-            ChunkSection[] achunksection = chunk.getSections();
+            ChunkSection[] achunksection = ((Chunk)chunk).getSections();
             WorldLightManager worldlightmanager = this.getLightManager();
             worldlightmanager.enableLightSources(new ChunkPos(chunkX, chunkZ), true);
 
@@ -169,7 +170,7 @@
                 Reflector.postForgeBusEvent(Reflector.ChunkEvent_Load_Constructor, chunk);
             }
 
-            return chunk;
+            return (Chunk)chunk;
         }
     }
 
