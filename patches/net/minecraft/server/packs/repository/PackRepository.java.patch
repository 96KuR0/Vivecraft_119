--- a/net/minecraft/server/packs/repository/PackRepository.java
+++ b/net/minecraft/server/packs/repository/PackRepository.java
@@ -4,8 +4,11 @@
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.ImmutableSet;
+import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
+import java.util.Arrays;
 import java.util.Collection;
+import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Objects;
@@ -13,6 +16,7 @@
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
+import net.minecraft.client.Minecraft;
 import net.minecraft.server.packs.PackResources;
 
 public class PackRepository implements AutoCloseable
@@ -25,7 +29,7 @@
     public PackRepository(Pack.PackConstructor p_10502_, RepositorySource... p_10503_)
     {
         this.constructor = p_10502_;
-        this.sources = ImmutableSet.copyOf(p_10503_);
+        this.sources = new HashSet<>(Arrays.asList(p_10503_));
     }
 
     public PackRepository(RepositorySource... p_10505_)
@@ -35,10 +39,16 @@
 
     public void reload()
     {
-        List<String> list = this.selected.stream().map(Pack::getId).collect(ImmutableList.toImmutableList());
+        List<Pack> list = Lists.newLinkedList(this.selected);
+        List<String> list1 = this.selected.stream().map(Pack::getId).collect(ImmutableList.toImmutableList());
         this.close();
         this.available = this.discoverAvailable();
-        this.selected = this.rebuildSelected(list);
+        this.selected = this.rebuildSelected(list1);
+
+        if (!this.selected.equals(list))
+        {
+            Minecraft.getInstance().resourcePacksChanged = true;
+        }
     }
 
     private Map<String, Pack> discoverAvailable()
@@ -47,9 +57,9 @@
 
         for (RepositorySource repositorysource : this.sources)
         {
-            repositorysource.loadPacks((p_10513_) ->
+            repositorysource.loadPacks((p_232615_1_) ->
             {
-                Pack pack = map.put(p_10513_.getId(), p_10513_);
+                Pack pack = map.put(p_232615_1_.getId(), p_232615_1_);
             }, this.constructor);
         }
 
@@ -58,7 +68,13 @@
 
     public void setSelected(Collection<String> p_10510_)
     {
+        List<Pack> list = Lists.newLinkedList(this.selected);
         this.selected = this.rebuildSelected(p_10510_);
+
+        if (!this.selected.equals(list))
+        {
+            Minecraft.getInstance().resourcePacksChanged = true;
+        }
     }
 
     private List<Pack> rebuildSelected(Collection<String> p_10518_)
@@ -121,4 +137,9 @@
     {
         return this.selected.stream().map(Pack::open).collect(ImmutableList.toImmutableList());
     }
+
+    public void addPackFinder(RepositorySource packFinder)
+    {
+        this.sources.add(packFinder);
+    }
 }
