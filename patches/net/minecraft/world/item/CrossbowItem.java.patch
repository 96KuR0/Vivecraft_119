--- a/net/minecraft/world/item/CrossbowItem.java
+++ b/net/minecraft/world/item/CrossbowItem.java
@@ -31,6 +31,9 @@
 import net.minecraft.world.item.enchantment.Enchantments;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.Vec3;
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
+import org.vivecraft.utils.math.Vector3;
 
 public class CrossbowItem extends ProjectileWeaponItem implements Vanishable
 {
@@ -220,9 +223,9 @@
 
     public static boolean containsChargedProjectile(ItemStack p_40872_, Item p_40873_)
     {
-        return getChargedProjectiles(p_40872_).stream().anyMatch((p_40870_) ->
+        return getChargedProjectiles(p_40872_).stream().anyMatch((p_220010_1_) ->
         {
-            return p_40870_.getItem() == p_40873_;
+            return p_220010_1_.getItem() == p_40873_;
         });
     }
 
@@ -257,14 +260,22 @@
                 Vec3 vec31 = p_40896_.getUpVector(1.0F);
                 Quaternion quaternion = new Quaternion(new Vector3f(vec31), p_40904_, true);
                 Vec3 vec3 = p_40896_.getViewVector(1.0F);
+                ServerVivePlayer serverviveplayer = NetworkHelper.vivePlayers.get(p_40896_.getUUID());
+
+                if (serverviveplayer != null && serverviveplayer.isVR())
+                {
+                    vec3 = serverviveplayer.getControllerDir(serverviveplayer.activeHand);
+                    serverviveplayer.getControllerVectorCustom(serverviveplayer.activeHand, new Vector3(0.0F, 1.0F, 0.0F));
+                }
+
                 Vector3f vector3f = new Vector3f(vec3);
                 vector3f.transform(quaternion);
                 projectile.shoot((double)vector3f.x(), (double)vector3f.y(), (double)vector3f.z(), p_40902_, p_40903_);
             }
 
-            p_40898_.hurtAndBreak(flag ? 3 : 1, p_40896_, (p_40858_) ->
+            p_40898_.hurtAndBreak(flag ? 3 : 1, p_40896_, (p_220017_1_) ->
             {
-                p_40858_.broadcastBreakEvent(p_40897_);
+                p_220017_1_.broadcastBreakEvent(p_40897_);
             });
             p_40895_.addFreshEntity(projectile);
             p_40895_.playSound((Player)null, p_40896_.getX(), p_40896_.getY(), p_40896_.getZ(), SoundEvents.CROSSBOW_SHOOT, SoundSource.PLAYERS, 1.0F, p_40900_);
@@ -415,7 +426,7 @@
         }
     }
 
-    private static float getPowerForTime(int p_40854_, ItemStack p_40855_)
+    public static float getPowerForTime(int p_40854_, ItemStack p_40855_)
     {
         float f = (float)p_40854_ / (float)getChargeDuration(p_40855_);
 
