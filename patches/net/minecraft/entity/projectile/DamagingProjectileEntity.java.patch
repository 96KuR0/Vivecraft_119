--- a/net/minecraft/entity/projectile/DamagingProjectileEntity.java
+++ b/net/minecraft/entity/projectile/DamagingProjectileEntity.java
@@ -1,5 +1,8 @@
 package net.minecraft.entity.projectile;
 
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityType;
 import net.minecraft.entity.LivingEntity;
@@ -15,6 +18,7 @@
 import net.minecraft.util.math.RayTraceResult;
 import net.minecraft.util.math.vector.Vec3d;
 import net.minecraft.world.World;
+import net.optifine.reflect.Reflector;
 
 public abstract class DamagingProjectileEntity extends ProjectileEntity
 {
@@ -81,7 +85,13 @@
 
             RayTraceResult raytraceresult = ProjectileHelper.func_234618_a_(this, this::canImpact, RayTraceContext.BlockMode.COLLIDER);
 
-            if (raytraceresult.getType() != RayTraceResult.Type.MISS)
+            //Forge
+            boolean flag = false;
+            if(Reflector.ForgeEventFactory_onProjectileImpactD.exists())
+            	flag = Reflector.callBoolean(Reflector.ForgeEventFactory_onProjectileImpactD, this, raytraceresult);
+            //
+            
+			if (raytraceresult.getType() != RayTraceResult.Type.MISS && !flag)
             {
                 this.onImpact(raytraceresult);
             }
@@ -181,6 +191,13 @@
             if (entity != null)
             {
                 Vec3d vec3d = entity.getLookVec();
+                //Vivecraft.
+            	ServerVivePlayer vp = NetworkHelper.vivePlayers.get(source.getTrueSource().getUniqueID());
+            	if (vp !=null && vp.isVR())
+            	{ 
+            		vec3d = vp.getHMDDir();
+            	}               
+            	//
                 this.setMotion(vec3d);
                 this.accelerationX = vec3d.x * 0.1D;
                 this.accelerationY = vec3d.y * 0.1D;
