--- a/net/minecraft/world/entity/monster/EnderMan.java
+++ b/net/minecraft/world/entity/monster/EnderMan.java
@@ -19,6 +19,7 @@
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.tags.BlockTags;
 import net.minecraft.tags.FluidTags;
+import net.minecraft.tags.TagKey;
 import net.minecraft.util.Mth;
 import net.minecraft.util.RandomSource;
 import net.minecraft.util.TimeUtil;
@@ -62,7 +63,11 @@
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
+import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
+import net.optifine.reflect.Reflector;
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
 
 public class EnderMan extends Monster implements NeutralMob
 {
@@ -110,7 +115,6 @@
 
     public void setTarget(@Nullable LivingEntity pLivingEntity)
     {
-        super.setTarget(pLivingEntity);
         AttributeInstance attributeinstance = this.getAttribute(Attributes.MOVEMENT_SPEED);
 
         if (pLivingEntity == null)
@@ -130,6 +134,8 @@
                 attributeinstance.addTransientModifier(SPEED_MODIFIER_ATTACKING);
             }
         }
+        //Forge move down here
+        super.setTarget(pLivingEntity);
     }
 
     protected void defineSynchedData()
@@ -224,8 +230,13 @@
     boolean isLookingAtMe(Player pPlayer)
     {
         ItemStack itemstack = pPlayer.getInventory().armor.get(3);
+        boolean flag = itemstack.is(Blocks.CARVED_PUMPKIN.asItem());
+
+        //Forge
+        if (Reflector.ForgeHooks_shouldSuppressEnderManAnger.exists())
+        	flag = Reflector.callBoolean(Reflector.ForgeHooks_shouldSuppressEnderManAnger, this, pPlayer, itemstack);
 
-        if (itemstack.is(Blocks.CARVED_PUMPKIN.asItem()))
+        if (flag)
         {
             return false;
         }
@@ -312,6 +323,7 @@
         return this.teleport(d1, d2, d3);
     }
 
+    //cursed params
     private boolean teleport(double pX, double p_32545_, double pY)
     {
         BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(pX, p_32545_, pY);
@@ -327,6 +339,18 @@
 
         if (flag && !flag1)
         {
+        	Object object = Reflector.call(Reflector.ForgeEventFactory_onEnderTeleport, this, pX, p_32545_, pY);
+            if (object != null)
+            {
+                if (Reflector.callBoolean(object, Reflector.Event_isCanceled))
+                {
+                    return false;
+                }
+
+                pX = Reflector.callDouble(object, Reflector.EnderTeleportEvent_getTargetX);
+                p_32545_ = Reflector.callDouble(object, Reflector.EnderTeleportEvent_getTargetY);
+                pY = Reflector.callDouble(object, Reflector.EnderTeleportEvent_getTargetZ);
+            }
             Vec3 vec3 = this.position();
             boolean flag2 = this.randomTeleport(pX, p_32545_, pY, true);
 
@@ -507,11 +531,18 @@
 
         public boolean canUse()
         {
+            boolean flag = !this.enderman.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING);
+
+            if (Reflector.ForgeEventFactory_getMobGriefingEvent.exists())
+            {
+                flag = !Reflector.callBoolean(Reflector.ForgeEventFactory_getMobGriefingEvent, this.enderman.level, this.enderman);
+            }
+
             if (this.enderman.getCarriedBlock() == null)
             {
                 return false;
             }
-            else if (!this.enderman.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING))
+            else if (flag)
             {
                 return false;
             }
@@ -533,8 +564,10 @@
             BlockPos blockpos1 = blockpos.below();
             BlockState blockstate1 = level.getBlockState(blockpos1);
             BlockState blockstate2 = this.enderman.getCarriedBlock();
+            Object object = Reflector.call(Reflector.BlockSnapshot_create, level.dimension(), level, blockpos);
+            boolean flag = Reflector.callBoolean(Reflector.ForgeEventFactory_onBlockPlace, this.enderman, object, Direction.UP);
 
-            if (blockstate2 != null)
+            if (blockstate2 != null && !flag)
             {
                 blockstate2 = Block.updateFromNeighbourShapes(blockstate2, this.enderman.level, blockpos);
 
@@ -549,7 +582,12 @@
 
         private boolean canPlaceBlock(Level p_32559_, BlockPos p_32560_, BlockState p_32561_, BlockState p_32562_, BlockState p_32563_, BlockPos p_32564_)
         {
-            return p_32562_.isAir() && !p_32563_.isAir() && !p_32563_.is(Blocks.BEDROCK) && p_32563_.isCollisionShapeFullBlock(p_32559_, p_32564_) && p_32561_.canSurvive(p_32559_, p_32560_) && p_32559_.getEntities(this.enderman, AABB.unitCubeFromLowerCorner(Vec3.atLowerCornerOf(p_32560_))).isEmpty();
+        	//Forge
+        	if (Reflector.ENDERMAN_PLACE_ON_BLACKLIST.exists())
+        		return p_32562_.isAir() && !p_32563_.isAir() && !p_32563_.is(Blocks.BEDROCK) && !p_32563_.is((TagKey<Block>) Reflector.getFieldValue(Reflector.ENDERMAN_PLACE_ON_BLACKLIST)) && p_32563_.isCollisionShapeFullBlock(p_32559_, p_32564_) && p_32561_.canSurvive(p_32559_, p_32560_) && p_32559_.getEntities(this.enderman, AABB.unitCubeFromLowerCorner(Vec3.atLowerCornerOf(p_32560_))).isEmpty();
+        	else
+        		return p_32562_.isAir() && !p_32563_.isAir() && !p_32563_.is(Blocks.BEDROCK) && p_32563_.isCollisionShapeFullBlock(p_32559_, p_32564_) && p_32561_.canSurvive(p_32559_, p_32560_) && p_32559_.getEntities(this.enderman, AABB.unitCubeFromLowerCorner(Vec3.atLowerCornerOf(p_32560_))).isEmpty();
+            //
         }
     }
 
@@ -663,11 +701,18 @@
 
         public boolean canUse()
         {
+            boolean flag = !this.enderman.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING);
+
+            if (Reflector.ForgeEventFactory_getMobGriefingEvent.exists())
+            {
+                flag = !Reflector.callBoolean(Reflector.ForgeEventFactory_getMobGriefingEvent, this.enderman.level, this.enderman);
+            }
+
             if (this.enderman.getCarriedBlock() != null)
             {
                 return false;
             }
-            else if (!this.enderman.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING))
+            else if (!flag)
             {
                 return false;
             }
