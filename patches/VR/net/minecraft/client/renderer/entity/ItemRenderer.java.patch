--- a/net/minecraft/client/renderer/entity/ItemRenderer.java
+++ b/net/minecraft/client/renderer/entity/ItemRenderer.java
@@ -16,6 +16,11 @@
 import java.util.List;
 import java.util.Set;
 import javax.annotation.Nullable;
+
+import org.vivecraft.gameplay.trackers.SwingTracker;
+import org.vivecraft.gameplay.trackers.TelescopeTracker;
+import org.vivecraft.render.SpecialItemRenderer;
+
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
@@ -65,6 +70,7 @@
 import net.optifine.CustomItems;
 import net.optifine.EmissiveTextures;
 import net.optifine.reflect.Reflector;
+import net.optifine.render.GlAlphaState;
 import net.optifine.render.VertexBuilderWrapper;
 import net.optifine.shaders.Shaders;
 import net.optifine.util.SingleIterable;
@@ -85,6 +91,11 @@
     private final BlockEntityWithoutLevelRenderer blockEntityRenderer;
     public ModelManager modelManager = null;
     private static boolean renderItemGui = false;
+    public static boolean ismainhand = false;
+    public static boolean isfphand = false;
+    float fade = 1.0F;
+    float manualFade = 1.0F;
+    private GlAlphaState alphaState = new GlAlphaState();
 
     public ItemRenderer(TextureManager p_174225_, ModelManager p_174226_, ItemColors p_174227_, BlockEntityWithoutLevelRenderer p_174228_)
     {
@@ -167,6 +178,19 @@
             }
 
             pMatrixStack.translate(-0.5D, -0.5D, -0.5D);
+            LocalPlayer localplayer = Minecraft.getInstance().player;
+
+            if (localplayer != null && isfphand)
+            {
+                this.fade = SwingTracker.getItemFade(localplayer, pItemStack);
+                if(pItemStack.is(Items.SHIELD) && !localplayer.isBlocking())
+                	if(fade > 0.5f)
+                		fade = 0.5f;
+            }
+            else
+            {
+                this.fade = this.manualFade;
+            }
 
             if (!pModel.isCustomRenderer() && (!pItemStack.is(Items.TRIDENT) || flag))
             {
@@ -186,6 +210,13 @@
                 Iterable<BakedModel> iterable = (Iterable<BakedModel>)(flag2 ? pModel.getRenderPasses(pItemStack, flag1) : new SingleIterable<>(pModel));
                 Iterable<RenderType> iterable1 = (Iterable<RenderType>)(flag2 ? pModel.getRenderTypes(pItemStack, flag1) : new SingleIterable<>(ItemBlockRenderTypes.getRenderType(pItemStack, flag1)));
 
+                //Vivecraft - check
+                if (isfphand && this.fade < 1.0F)
+                {
+                	iterable1 = new SingleIterable<>(Sheets.translucentCullBlockSheet());
+                }
+                //
+
                 for (BakedModel bakedmodel : iterable)
                 {
                     pModel = bakedmodel;
@@ -364,6 +395,19 @@
                     l = CustomColors.getColorFromItemStack(pItemStack, bakedquad.getTintIndex(), l);
                 }
             }
+            
+            if (Minecraft.getInstance().jumpTracker.isBoots(pItemStack))
+            {
+            	l = this.makeColor(1, 0, 255, 0);
+            }
+            else if (Minecraft.getInstance().climbTracker.isClaws(pItemStack))
+            {
+            	l = this.makeColor(1, 130, 0, 75);
+            }
+            else if (TelescopeTracker.isLegacyTelescope(pItemStack))
+            {
+            	l = this.makeColor(1, 190, 110, 135);
+            }
 
             float f = (float)(l >> 16 & 255) / 255.0F;
             float f1 = (float)(l >> 8 & 255) / 255.0F;
@@ -375,7 +419,7 @@
             }
             else
             {
-                pBuffer.putBulkData(posestack$pose, bakedquad, f, f1, f2, pCombinedLight, pCombinedOverlay);
+                SpecialItemRenderer.addQuad(pBuffer, posestack$pose, bakedquad, f, f1, f2, this.fade, pCombinedLight, pCombinedOverlay);
             }
         }
     }
@@ -436,6 +480,10 @@
         RenderSystem.enableBlend();
         RenderSystem.blendFunc(GlStateManager.SourceFactor.SRC_ALPHA, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA);
         RenderSystem.setShaderColor(1.0F, 1.0F, 1.0F, 1.0F);
+        //Vivecraft.. wut
+        GlStateManager.getAlphaState(this.alphaState);
+        GlStateManager.enableAlphaTest();
+        //
         PoseStack posestack = RenderSystem.getModelViewStack();
         posestack.pushPose();
         posestack.translate((double)pX, (double)pY, (double)(100.0F + this.blitOffset));
@@ -622,4 +670,24 @@
     {
         return this.blockEntityRenderer;
     }
+
+    private int makeColor(int a, int r, int g, int b)
+    {
+        return a << 24 | r << 16 | g << 8 | b;
+    }
+
+    public float getCurrentFade()
+    {
+        return this.fade;
+    }
+
+    public float getFade()
+    {
+        return this.manualFade;
+    }
+
+    public void setFade(float fade)
+    {
+        this.manualFade = fade;
+    }
 }
