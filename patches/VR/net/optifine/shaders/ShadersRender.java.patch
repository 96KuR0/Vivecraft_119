--- a/net/optifine/shaders/ShadersRender.java
+++ b/net/optifine/shaders/ShadersRender.java
@@ -2,6 +2,7 @@
 
 import com.mojang.blaze3d.platform.GLX;
 import com.mojang.blaze3d.platform.GlStateManager;
+import com.mojang.blaze3d.platform.Lighting;
 import com.mojang.blaze3d.systems.RenderSystem;
 import com.mojang.blaze3d.vertex.BufferBuilder;
 import com.mojang.blaze3d.vertex.PoseStack;
@@ -251,7 +252,7 @@
         }
     }
 
-    public static void renderShadowMap(GameRenderer entityRenderer, Camera activeRenderInfo, int pass, float partialTicks, long finishTimeNano)
+    public static void renderShadowMap(GameRenderer gameRenderer, Camera activeRenderInfo, int pass, float partialTicks, long finishTimeNano)
     {
         if (Shaders.hasShadowMap)
         {
@@ -334,6 +335,7 @@
                 levelrenderer.renderChunkLayer(RenderTypes.SOLID, posestack, d0, d1, d2, matrix4f1);
                 Shaders.checkGLError("shadow terrain solid");
                 GlStateManager.enableAlphaTest();
+                GlStateManager.alphaFunc(516, 0.1F); // vivecraft?
                 levelrenderer.renderChunkLayer(RenderTypes.CUTOUT_MIPPED, posestack, d0, d1, d2, matrix4f1);
                 Shaders.checkGLError("shadow terrain cutoutmipped");
                 minecraft.getTextureManager().getTexture(TextureAtlas.LOCATION_BLOCKS).setFilter(false, false);
@@ -459,7 +461,6 @@
             GlStateManager._depthMask(true);
             GlStateManager._enableCull();
             GlStateManager._disableBlend();
-            GL30.glFlush();
             Shaders.checkGLError("shadow flush");
             Shaders.isShadowPass = false;
             minecraft.getProfiler().popPush("shadow postprocess");
