--- a/net/optifine/Config.java
+++ b/net/optifine/Config.java
@@ -143,14 +143,15 @@
 
     public static void initGameSettings(Options settings)
     {
-        if (gameSettings == null)
-        {
+    	//Vivecraft why do we do this?
+        //if (gameSettings == null)
+        //{
             gameSettings = settings;
             updateAvailableProcessors();
             ReflectorForge.putLaunchBlackboard("optifine.ForgeSplashCompatible", Boolean.TRUE);
             antialiasingLevel = gameSettings.ofAaLevel;
             quadRenderingAvailable = canUseCompatibilityProfile();
-        }
+        //}
     }
 
     public static void initDisplay()
@@ -163,14 +164,11 @@
 
     public static void checkInitialized()
     {
-        if (!initialized)
+        if (!initialized && Minecraft.getInstance().getWindow() != null)
         {
-            if (Minecraft.getInstance().getWindow() != null)
-            {
-                initialized = true;
-                checkOpenGlCaps();
-                startVersionCheckThread();
-            }
+            initialized = true;
+            checkOpenGlCaps();
+            startVersionCheckThread();
         }
     }
 
@@ -207,9 +205,9 @@
 
                 build = readLines(inputstream)[0];
             }
-            catch (Exception exception)
+            catch (Exception exception1)
             {
-                warn("" + exception.getClass().getName() + ": " + exception.getMessage());
+                warn("" + exception1.getClass().getName() + ": " + exception1.getMessage());
                 build = "";
             }
         }
@@ -398,9 +396,9 @@
                 }
             }
         }
-        catch (Exception exception)
+        catch (Exception exception1)
         {
-            error("", exception);
+            error("", exception1);
             return def;
         }
     }
@@ -448,9 +446,9 @@
             String s = GL11.glGetString(GL11.GL_EXTENSIONS);
             return s.split(" ");
         }
-        catch (Exception exception)
+        catch (Exception exception1)
         {
-            error("", exception);
+            error("", exception1);
             return new String[0];
         }
     }
@@ -505,9 +503,9 @@
                 }
             }
         }
-        catch (Throwable throwable)
+        catch (Throwable throwable1)
         {
-            warn(throwable.getClass().getName() + ": " + throwable.getMessage());
+            warn(throwable1.getClass().getName() + ": " + throwable1.getMessage());
         }
     }
 
@@ -1120,7 +1118,7 @@
             Resource resource = resourceManager.getResource(location);
             return resource != null;
         }
-        catch (IOException ioexception)
+        catch (IOException ioexception1)
         {
             return false;
         }
@@ -1174,7 +1172,7 @@
                     astring[i] = apackresources[i].getName();
                 }
 
-                return arrayToString((Object[])astring);
+                return arrayToString(astring);
             }
         }
     }
@@ -2033,9 +2031,9 @@
 
         if (showFrameTime)
         {
-            String s1 = String.format("%.1f", 1000.0D / (double)limit(i, 1, Integer.MAX_VALUE));
-            String s = String.format("%.1f", 1000.0D / (double)limit(j, 1, Integer.MAX_VALUE));
-            return "" + s1 + "/" + s + " ms";
+            String s = String.format("%.1f", 1000.0D / (double)limit(i, 1, Integer.MAX_VALUE));
+            String s1 = String.format("%.1f", 1000.0D / (double)limit(j, 1, Integer.MAX_VALUE));
+            return "" + s + "/" + s1 + " ms";
         }
         else
         {
@@ -2323,14 +2321,7 @@
 
     public static boolean isIntegratedServerRunning()
     {
-        if (minecraft.getSingleplayerServer() == null)
-        {
-            return false;
-        }
-        else
-        {
-            return minecraft.isLocalServer();
-        }
+        return minecraft.getSingleplayerServer() == null ? false : minecraft.isLocalServer();
     }
 
     public static IntBuffer createDirectIntBuffer(int capacity)
