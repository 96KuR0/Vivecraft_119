--- a/net/minecraft/util/datafix/fixes/LeavesFix.java
+++ b/net/minecraft/util/datafix/fixes/LeavesFix.java
@@ -277,7 +277,7 @@
 
             for (int i = 0; i < this.palette.size(); ++i)
             {
-                Dynamic<?> dynamic = this.palette.get(i);
+                Dynamic<?> dynamic = (Dynamic<?>) this.palette.get(i);
                 String s = dynamic.get("Name").asString("");
 
                 if (LeavesFix.LEAVES.containsKey(s))
@@ -319,12 +319,12 @@
 
         int getDistance(int p_16279_)
         {
-            return this.isLog(p_16279_) ? 0 : Integer.parseInt(this.palette.get(p_16279_).get("Properties").get("distance").asString(""));
+            return this.isLog(p_16279_) ? 0 : Integer.parseInt(((Dynamic<?> ) this.palette.get(p_16279_)).get("Properties").get("distance").asString(""));
         }
 
         void setDistance(int p_16260_, int p_16261_, int p_16262_)
         {
-            Dynamic<?> dynamic = this.palette.get(p_16261_);
+            Dynamic<?> dynamic = (Dynamic<?>) this.palette.get(p_16261_);
             String s = dynamic.get("Name").asString("");
             boolean flag = Objects.equals(dynamic.get("Properties").get("persistent").asString(""), "true");
             int i = this.getStateId(s, flag, p_16262_);
@@ -362,7 +362,7 @@
         protected static final String PROPERTIES_TAG = "Properties";
         private final Type < Pair < String, Dynamic<? >>> blockStateType = DSL.named(References.BLOCK_STATE.typeName(), DSL.remainderType());
         protected final OpticFinder < List < Pair < String, Dynamic<? >>> > paletteFinder = DSL.fieldFinder("Palette", DSL.list(this.blockStateType));
-        protected final List < Dynamic<? >> palette;
+        protected final List palette;
         protected final int index;
         @Nullable
         protected PackedBitStorage storage;
@@ -399,13 +399,13 @@
                 this.storage = new PackedBitStorage(i, 4096, along);
             }
         }
-
+        
         public Typed<?> write(Typed<?> p_16289_)
         {
             return this.isSkippable() ? p_16289_ : p_16289_.update(DSL.remainderFinder(), (p_16305_) ->
             {
                 return p_16305_.set("BlockStates", p_16305_.createLongList(Arrays.stream(this.storage.getRaw())));
-            }).set(this.paletteFinder, this.palette.stream(). < Pair < String, Dynamic<? >>> map((p_16300_) ->
+            }).set((OpticFinder)this.paletteFinder, this.palette.stream().map((p_16300_) ->
             {
                 return Pair.of(References.BLOCK_STATE.typeName(), p_16300_);
             }).collect(Collectors.toList()));
